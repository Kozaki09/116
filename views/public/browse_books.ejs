<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Browse</title>
    <link rel="stylesheet" href="/css/general.css"> <!-- General styles -->
    <link rel="stylesheet" href="/css/browse.css"> <!-- Specific styles for dashboard page -->
    <link rel="stylesheet" href="/css/sidebar.css"> <!-- Specific styles for login/create page -->
</head>
<body>
    <div id="sidebar-container"><%- include('../partials/sidebar') %></div>

    <div class="content">
        <h1>Browse</h1>
        <div id="loading" class="loading">Loading books...</div>

    <table id="booksTable" style="display: none;">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
            </tr>
        </thead>
        <tbody>
            <!-- Data will be inserted here -->
        </tbody>
    </table>

    <script>
        async function fillTable() {
            try {
                const books = <%- JSON.stringify(books) %>;

                if (typeof books !== "object") {
                    throw new Error('Expected books to be an object');
                }

                
                document.getElementById('loading').style.display = 'none';
                document.getElementById('booksTable').style.display = 'table';

                const tableBody = document.querySelector('#booksTable tbody');
                tableBody.innerHTML = ''; 

                Object.keys(books).forEach(id => {
                    const book = books[id];
                    const row = document.createElement('tr');

                    const titleCell = document.createElement('td');
                    const titleLink = document.createElement('a');
                    titleLink.textContent = book.title;
                    titleLink.href = `/get/book?book_id=${id}`;
                    titleCell.appendChild(titleLink);

                    const authorCell = document.createElement('td');

                    book.authors.forEach((author, index) => {
                        const authorLink = document.createElement('a');
                        authorLink.textContent = author.name;
                        authorLink.href= `author?auth_id=${encodeURIComponent(author.id)}`;

                        if (index > 0) {
                            authorCell.appendChild(document.createTextNode(', '));
                        }

                        authorCell.appendChild(authorLink)
                    });

                    const publisherCell = document.createElement('td');
                    const publisherLink = document.createElement('a');
                    publisherLink.textContent = book.publisher;
                    publisherLink.href = `/get/publisher?pub_id=${book.pub_id}`;

                    row.appendChild(titleCell);
                    row.appendChild(authorCell);

                    tableBody.appendChild(row);
                });
            } catch (error) {
                console.error('Error fetching public books:', error);
                document.getElementById('loading').style.display = 'none';
                document.getElementById('error').style.display = 'block';
            }
        }
       
        fillTable();
    </script>

</body>
</html>